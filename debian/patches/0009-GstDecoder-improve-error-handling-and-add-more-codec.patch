From 7b3c94111afc5a76516b9f8a001d80df3c35ffda Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Sun, 11 Dec 2011 19:21:56 -0600
Subject: [PATCH 09/10] GstDecoder: improve error handling and add more codecs

---
 .../DVDCodecs/Video/DVDVideoCodecGStreamer.cpp     |   35 ++++++++++++++++++-
 .../DVDCodecs/Video/DVDVideoCodecGStreamer.h       |    3 +-
 .../cores/dvdplayer/DVDCodecs/Video/GstDecoder.cpp |    4 ++
 xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.h  |    3 +-
 4 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.cpp
index afac181..fda5fdd 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.cpp
@@ -146,6 +146,8 @@ CDVDVideoCodecGStreamer::CDVDVideoCodecGStreamer()
   m_ptsinvalid = true;
   m_drop = false;
   m_reset = false;
+  m_error = false;
+  m_crop = false;
 
   m_timebase = 1000.0;
 }
@@ -160,6 +162,10 @@ bool CDVDVideoCodecGStreamer::Open(CDVDStreamInfo &hints, CDVDCodecOptions &opti
   Dispose();
 
   m_ptsinvalid = hints.ptsinvalid;
+  m_drop = false;
+  m_reset = false;
+  m_error = false;
+  m_crop = false;
 
   m_AppSrcCaps = CreateVideoCaps(hints, options);
 
@@ -231,6 +237,12 @@ int CDVDVideoCodecGStreamer::Decode(BYTE* pData, int iSize, double dts, double p
 
   GstBuffer *buffer = NULL;
 
+  if (m_error)
+  {
+    m_error = false;
+    return VC_ERROR;
+  }
+
   if (pts == DVD_NOPTS_VALUE)
     pts = dts;
 
@@ -400,7 +412,7 @@ void CDVDVideoCodecGStreamer::OnDecodedBuffer(GstBuffer *buffer)
   /* throttle decoding if rendering is not keeping up.. */
   while (m_pictureQueue.size() > 4)
   {
-//    DBG("throttling: %d", m_pictureQueue.size());
+    DBG("throttling: %d", m_pictureQueue.size());
     usleep(1000);
   }
 
@@ -423,9 +435,15 @@ void CDVDVideoCodecGStreamer::OnEnoughData()
   m_needData = false;
 }
 
+void CDVDVideoCodecGStreamer::OnError(const gchar *message)
+{
+  m_error = true;
+}
+
 GstCaps *CDVDVideoCodecGStreamer::CreateVideoCaps(CDVDStreamInfo &hints, CDVDCodecOptions &options)
 {
   GstCaps *caps = NULL;
+  int version = 0;
 
   switch (hints.codec)
   {
@@ -433,15 +451,28 @@ GstCaps *CDVDVideoCodecGStreamer::CreateVideoCaps(CDVDStreamInfo &hints, CDVDCod
       caps = gst_caps_new_simple ("video/x-h264", NULL);
       break;
     case CODEC_ID_MPEG4:
+      version++;
+      version++;
+    case CODEC_ID_MPEG2VIDEO:
+      version++;
+    case CODEC_ID_MPEG1VIDEO:
+      version++;
       caps = gst_caps_new_simple ("video/mpeg", NULL);
       if (caps)
       {
         gst_caps_set_simple(caps,
-            "mpegversion", G_TYPE_INT, 4,
+            "mpegversion", G_TYPE_INT, version,
             "systemstream", G_TYPE_BOOLEAN, false,
+            "parsed", G_TYPE_BOOLEAN, true,
             NULL);
       }
       break;
+    case CODEC_ID_VP6:
+      caps = gst_caps_new_simple ("video/x-vp6", NULL);
+      break;
+    case CODEC_ID_VP6F:
+      caps = gst_caps_new_simple ("video/x-vp6-flash", NULL);
+      break;
     default:
       ERR("codec: unknown = %i", hints.codec);
       break;
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.h b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.h
index f347c41..75ec4c1 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.h
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecGStreamer.h
@@ -46,6 +46,7 @@ public:
   void OnDecodedBuffer(GstBuffer *buffer);
   void OnNeedData();
   void OnEnoughData();
+  void OnError(const gchar *message);
 
 private:
   virtual void Flush();
@@ -59,7 +60,7 @@ private:
   bool m_crop;
   gint m_cropTop, m_cropLeft, m_cropWidth, m_cropHeight;
 
-  gboolean m_drop, m_reset;
+  gboolean m_drop, m_reset, m_error;
 
   // caps parameters:
   gint m_width, m_height;
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.cpp
index d5f898c..fae6f78 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.cpp
@@ -190,6 +190,10 @@ gboolean CGstDecoder::BusCallback(GstBus *bus, GstMessage *msg, gpointer data)
       g_error_free (error);
 
       g_main_loop_quit(decoder->m_loop);
+
+      if (decoder->m_callback)
+        decoder->m_callback->OnError(error->message);
+
       break;
 
     case GST_MESSAGE_WARNING:
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.h b/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.h
index b9fd950..deefc18 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.h
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/GstDecoder.h
@@ -30,7 +30,7 @@ static inline int debug_enabled(void)
   if (enabled == -1)
   {
     char *str = getenv("XBMC_DEBUG");
-    enabled = str && strstr(str, "decoder");
+    enabled = str && strstr(str, "decode");
   }
   return enabled;
 }
@@ -55,6 +55,7 @@ public:
   virtual void OnDecodedBuffer(GstBuffer *buffer) = 0;
   virtual void OnNeedData() = 0;
   virtual void OnEnoughData() = 0;
+  virtual void OnError(const gchar *message) = 0;
 };
 
 class CGstDecoder : public CThread
-- 
1.7.5.4

